function calMailReport_HandlePanels(inputPanel, outputPanel, inputPanelValue, 
                        outputPanelValue, spaceMoreAttachments, divBackMonth, buttonsHolder)
{
    document.getElementById(inputPanel).style.display = "block";
    document.getElementById(outputPanel).style.display = "none";
    document.getElementById(buttonsHolder).style.display = "none";   
    document.getElementById(divBackMonth).style.display = '';
    
    //document.getElementById(spaceMoreAttachments).style.height = "93px";
}

   
function getCalMailReport(Param)
{
    //str = "top=0, left=0, height=500, width=700, menubar=no, toolbar=no, titlebar=no, location=no, resizable=yes, menu=no, directories=no, status=no, scrollbars=no";
    //alert(str);
    //window.open('CalMailDetailingPrint.aspx'+"?p="+Param, 'aspnetForm' , str);//'PersonalInserts' 
    
    var winObj = __CreatePopupWindow(_detailingCalMail + "?p="+Param ,'aspnetForm',['CalMailDetailingPrint'], [Param], _detailingCalMailParams, calMailWaitMsgContent());
    
}

function calMailWaitMsgContent()
{
    return "<center><br /><br /><IMG id=\"imgWait\" SRC=\"../../Images/WaitAnimCalMail.gif\" /></center>";   
    //return "<iframe src=\"WaitAnimCalMail.html\"></iframe>";
}    
    

var xmlHttp; 
var requestURL = 'CalMailDetailingPrint.aspx?b=d'; 

function do_312()
{ 
	//Append the name to search for to the requestURL 
	var url = requestURL; 
     
	//Create the xmlHttp object to use in the request 
	//stateChangeHandler will fire when the state has changed, i.e. data is received back 
	// This is non-blocking (asynchronous) 
	xmlHttp = GetXmlHttpObject(stateChangeHandler); 
     
	//Send the xmlHttp get to the specified url 
	xmlHttp_Get(xmlHttp, url); 
}

function GetXmlHttpObject(handler) 
{
    var objXmlHttp;
    
    try
    { 
        // Firefox, Opera 8.0+, Safari  
	    objXmlHttp=new XMLHttpRequest();  
	    objXmlHttp.onload = handler; 
		objXmlHttp.onerror = handler;
		
		return objXmlHttp;
    }
    catch (e)
    {  
        // Internet Explorer  try
	    try
	    {
		    objXmlHttp=new ActiveXObject("Msxml2.XMLHTTP"); 
		    objXmlHttp.onreadystatechange = handler;    
	    }
	    catch (e)
	    {    
		    try
		    {      
			    objXmlHttp=new ActiveXObject("Microsoft.XMLHTTP"); 
			    objXmlHttp.onreadystatechange = handler;         
		    }
		    catch (e)
		    {      
			    //alert("Your browser does not support AJAX!");      
			    return false;      
		    }
	    }
	    return objXmlHttp;
    }
}

function decreaseCounter(p_url)
{ 	     
	//Create the xmlHttp object to use in the request 
	//stateChangeHandler will fire when the state has changed, i.e. data is received back 
	// This is non-blocking (asynchronous) 
	xmlHttp = GetXmlHttpObject(stateChangeHandler); 
     
	//Send the xmlHttp get to the specified url 
	xmlHttp_Get(xmlHttp, p_url); 
}

//stateChangeHandler will fire when the state has changed, i.e. data is received back 
// This is non-blocking (asynchronous) 
function stateChangeHandler() 
{ 
	//readyState of 4 or 'complete' represents that data has been returned 
	if (xmlHttp.readyState == 4 || xmlHttp.readyState == 'complete')
	{ 
		//Gather the results from the callback 
		var str = xmlHttp.responseText; 
		//alert(str);
	} 
	
	if (xmlHttp.readyState == 1)
	{ 
		
	}
}

// XMLHttp send GET request 
function xmlHttp_Get(xmlhttp, url) 
{ 
	xmlhttp.open('GET', url, true); 
	xmlhttp.send(null); 
}

function setHeightInRightAttach(spaceMoreAttachments, howPurifiesInLeftSide, howColumnInGrid)
{   
    if(howPurifiesInLeftSide != 0)//we have 4 or 6 Purifies
    {
        var heightOfGrid = document.getElementById('ArchiveGrid').offsetHeight;
        
        var heightRightHolder = document.getElementById("holderOfRightContent").offsetHeight - 15;
        
        if (navigator.appName == "Microsoft Internet Explorer")
        {
            heightRightHolder = heightRightHolder - 4;
        }

        var heightToGetComparedTo = howPurifiesInLeftSide * 151;        
        var spaceNeeded = GetRightHeightOfAttachments (heightRightHolder , heightToGetComparedTo);
       
        $("#spaceMoreAttachments").css("height", spaceNeeded + "px");
    }
}



function GetRightHeightOfAttachments (heightRightContent, heightOfAttachments)
{
    if (heightOfAttachments - heightRightContent > 151)
    {
        return GetRightHeightOfAttachments (heightRightContent, heightOfAttachments - 151);
    }
    else
    {
        return heightOfAttachments - heightRightContent;
    }

}

function openPopup(Link) 
{
    str = "top=0, left=0, height=500, width=700, menubar=no, toolbar=no, titlebar=no, location=no, resizable=no, menu=no, directories=no, status=no, scrollbars=yes";

    window.open(Link, 'aspnetForm', str);
}

function OpenLogoLink(link) 
{
    if (link != 'null') 
    {
        var str = "top=0, left=0, height=500, width=700,menubar=no, toolbar=no, titlebar=no, location=yes, resizable=yes, menu=no, directories=no, status=no, scrollbars=yes";
        window.open(link, 'companyLogo', str);
    }
}


function rowClick(row, Param) 
{
    restoreRow(currentRow);
    currentRow = row;
    getCalMailReport(Param);
}   

var currentRow = null;
var theMessage = null;

function rowOver(row, param) 
{
    row.className = 'CssRowMouseOverClass';
}

function rowOut(row, param) 
{
    restoreRow(row);
}

function restoreRow(row) 
{
    if (row != null)
        row.className = 'CssRowMouseOutClass';
}

/* detailing calMail popup  */
// ----------------------------------
function GetCalMailGridViaAjax ()
{

   $.get('DetailingCalMail.aspx', function(data) 
   {
      var calMailDom = $(data);
      var pnlOutputHtml = calMailDom.find(".cal_mail_grid_holder");
      var allAttachments = calMailDom.find(".calMailAttacment");
       
      $("#popUpGridHolder").append (pnlOutputHtml.html());
      $("#popUpGridHolder").find(".detailing_mail_search_button .arrow_link").attr("href", "DetailingCalMail.aspx?s=1");
     
      BuildAttachmentsInPopUp (allAttachments);
     
      $("#calMailDialog").dialog({
            bgiframe: false,
            minHeight: 500,
            width: 696,
            modal: false, autoOpen: false,
            hide: 'fadeOut', show: 'slide',
            closeOnEscape: true, draggable: true, resizable: false
       });
       
       $("#calMailDialog").show(); 
       $("#calMailDialog").dialog("open");
   });
}

function CloseCalMailPopUp ()
{
    $("#calMailDialog").dialog("close");
    $("#calMailDialog").parent().fadeOut();
}

function BuildAttachmentsInPopUp (p_attachments)
{
    var attachmentsHolder = $("#popUpAttachmentsHolder");

    p_attachments.each (function (index)
    {
        if (index < 3)
        {
            $(this).find(".dashed_seperator_holder").parent().remove();
        }
    
        attachmentsHolder.append ($(this));
    });
}

function openPopupDetailing(PersonalOrGeneral, GeneralLink, Param)
{
    str = "top=0, left=0, height=500, width=700, menubar=no, toolbar=no, titlebar=no, location=no, resizable=yes, menu=no, directories=no, status=no, scrollbars=no";
    if(PersonalOrGeneral == "Personal")
    {
        //'PersonalInserts' 
        window.open('CalMailDetailingPrint.aspx'+"?p="+Param + "&pi=y", 'aspnetForm' , str);
    }
    else
    {
        window.open(GeneralLink ,'GeneralAttach' , str); 
    }    
}
